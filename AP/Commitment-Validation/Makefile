# name:		Makefile
# revision:	6.1.18
# date:		June 07, 2013  17:05
# function:	Production version of Makefile
#		to make the libcustom-util.o custom library
# author:	Generated by ptmkmk script
#
#    This file was created with the command:
#
#      ptmkmk -p -l libcustom-util.o
#
#    ptmkmk utility developed for Profitool, Inc., Denver CO
#    Paul Kabotie, 1994

# Generate a Posix standard makefile
.POSIX:;

# List suffixes for files in order of significance
.SUFFIXES:;
.SUFFIXES: .o .ftn,v .ftn .ec,v .ec .c,v .c .f .y .l .s .sh .h,v .h .a

# Don't let the makefile delete important files upon exception
.PRECIOUS:;

MAINPROG = 
LOCALLIB = 
LIBOBJ   = libcustom-util.o
OTHRLIB  = 

BASE    = /pti/pt.6.1.18
SITED   = /pti/pt.site.6.1.18
PTINCLD = $(BASE)/source/include

PFCD    = $(BASE)/source/pfcv4
PROMD   = $(BASE)/promula
PLIBD   = $(BASE)/source/primelib
CSTMUTD = $(SITED)/custom-util
CSTMRPD = $(SITED)/custom-report
CSTMOND = $(SITED)/custom-online
UONLIND = $(BASE)/source/u.online
ONLIND  = $(BASE)/source/online
BBD     = $(BASE)/source/bb
FIOD    = $(BASE)/source/fio
POSTD   = $(BASE)/source/post
RWD     = $(BASE)/source/rw
SCFMD   = $(BASE)/source/scfm
SCRD    = $(BASE)/source/scr
UTLD    = $(BASE)/source/util
UUTLD   = $(BASE)/source/u.util
SQLCLID = $(BASE)/source/SQLclient
SQLCOMD = $(BASE)/source/SQLcommon
SQLDATD = $(BASE)/source/datalist
SQLSERD = $(BASE)/source/SQLserver
OTHR    =
LIBES   =

RCSD   = RCS

CC     = /usr/bin/gcc
AR     = /usr/bin/ar
LD     = /usr/bin/ld
ESQL   = esql

PROC   = proc

CFLAGS = \
	-I$(PTINCLD) \
	-DAN6PLAT \
	-D_POSIX_SOURCE \
	-D_SVID_SOURCE \
	-g \
	-Wimplicit-function-declaration \
	-ansi 

ARFLAGS = frc
LDLIBFLAGS = -r
HFILES = 

FTNOBJS = 

ECOBJS = 

COBJS = \
	dde.fiodde.o \
	dde.gnfdst.o \
	gp.i-ckst.o \
	post.cpcksi.o \
	post.cussoc.o \
	post.custom_pstlab.o \
	post.lodbd.o \
	post.loddi.o \
	post.postdc.o \
	post.svchk.o \
	scr.lfld-s.o \
	sh.cstop.o \
	util.cnvcem.o \
	util.cscval.o \
	util.custky.o \
	util.dymd-c.o \
	util.frmacs.o \
	util.vald-c.o 

LIBMEMBERS = 

# The main target to build
all: $(HFILES) $(LIBOBJ)

# Define a rule to setup directory for a clean build
clean:
		rm -f $(MAINPROG) $(LOCALLIB) *.o \

# Rule for building the custom object library (.o)
$(LIBOBJ): $(FTNOBJS) $(ECOBJS) $(COBJS)
	 $(LD) $(LDLIBFLAGS) $(FTNOBJS) $(ECOBJS) $(COBJS) -o $(LIBOBJ)


# Define rules for generating specific objects and library members.  
#   For development version, targets depend on dependencies in a
#   traversable order down to a leaf source.  For production version,
#   targets depend directly on a leaf source.

dde.fiodde.o: dde.fiodde.c $(HFILES)
dde.gnfdst.o: dde.gnfdst.c $(HFILES)
gp.i-ckst.o: gp.i-ckst.c $(HFILES)
post.cpcksi.o: post.cpcksi.c $(HFILES)
post.cussoc.o: post.cussoc.c $(HFILES)
post.custom_pstlab.o: post.custom_pstlab.c $(HFILES)
post.lodbd.o: post.lodbd.c $(HFILES)
post.loddi.o: post.loddi.c $(HFILES)
post.postdc.o: post.postdc.c $(HFILES)
post.svchk.o: post.svchk.c $(HFILES)
scr.lfld-s.o: scr.lfld-s.c $(HFILES)
sh.cstop.o: sh.cstop.c $(HFILES)
util.cnvcem.o: util.cnvcem.c $(HFILES)
util.cscval.o: util.cscval.c $(HFILES)
util.custky.o: util.custky.c $(HFILES)
util.dymd-c.o: util.dymd-c.c $(HFILES)
util.frmacs.o: util.frmacs.c $(HFILES)
util.vald-c.o: util.vald-c.c $(HFILES)

# Define a rule for generating an object from a .ftn source
.ftn.o:
		$(PROMD)/promulate $<
		$(CC) $(CFLAGS) -c $*.c

# Define a rule for generating object from .c source.  
.c.o:
		$(CC) $(CFLAGS) -c $<

# Define a rule for generating a .c source from an .ec source
.ec.c:
		$(ESQL) -e -ansi $<

